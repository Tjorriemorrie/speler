"use strict";var PercentageFormatter=React.createClass({displayName:"PercentageFormatter",render:function(){return React.createElement("span",null,Math.round(100*this.props.value)+"%")}}),Library=React.createClass({displayName:"Library",getInitialState:function(){return console.info("[Library] getInitialState"),{isScanning:!1,grouping:null,rows:[]}},componentDidMount:function(){console.info("[Library] componentDidMount")},onTabSelect:function(a){console.info("[Library] onTabSelect: ",a),this.loadLibrarySongs(a)},scanDirectory:function(){console.info("[Library] scandir"),this.state.isScanning?alert("Scanning in progress"):(this.setState({isScanning:!0}),$.getJSON("/scan/dir").done(function(){console.info("[Library] scanDirectory: done")}.bind(this)).always(function(a){this.setState({isScanning:!1}),a.parsed>=50&&this.scanDirectory()}.bind(this)))},loadLibrarySongs:function(a){console.info("[Library] loadLibrarySongs: grouping = ",a),$.getJSON("/find/"+a).done(function(b){console.info("[Library] loadLibrarySongs done"),this.setState({grouping:a,rows:b})}.bind(this))},formatPercentage:function(a){return Math.round(100*a)+"%"},updateRow:function(a,b,c){console.info("[Library] updateRow",a,b,c);var d={id:a.id};d[b]=c,$.post("/set/"+this.props.grouping,d).done(function(a){console.info("[Library] updateRow: done",a)}.bind(this)).fail(function(a,b,c,d){console.error("[Library] updateRow: error",a),alert("Error [Library] updateRow")}.bind(this)).always(function(){console.info("[Library] updateRow: always"),this.loadLibrarySongs(this.props.grouping)}.bind(this))},getGrid:function(){return console.info("[Library] getGrid"),"artists"==this.state.grouping?React.createElement("div",null,React.createElement("h4",null,"Artists"),React.createElement(SmallGrid,{rows:this.state.rows,cols:[{key:"rating",name:"Rating",format:this.formatPercentage},{key:"name",name:"Title",edit:this.updateRow},{key:"count_albums",name:"Albums"},{key:"count_songs",name:"Songs"}]})):"albums"==this.state.grouping?React.createElement("div",null,React.createElement("h4",null,"Albums"),React.createElement(SmallGrid,{rows:this.state.rows,cols:[{key:"rating",name:"Rating",format:this.formatPercentage},{key:"name",name:"Title",edit:this.updateRow},{key:"artist.name",name:"Artist"},{key:"count_songs",name:"Songs"}]})):"songs"==this.state.grouping?React.createElement("div",null,React.createElement("h4",null,"Songs"),React.createElement(SmallGrid,{rows:this.state.rows,cols:[{key:"rating",name:"Rating",format:this.formatPercentage},{key:"name",name:"Title",edit:this.updateRow},{key:"artist.name",name:"Artist",edit:this.updateRow},{key:"album.name",name:"Album",edit:this.updateRow},{key:"track_number",name:"Track",edit:this.updateRow}]})):void 0},render:function(){console.info("[Library] render");var a=this.getGrid();return React.createElement("div",{className:"row"},React.createElement("h3",null,React.createElement("button",{className:"btn btn-default btn-sm pull-right",onClick:this.scanDirectory},this.state.isScanning?"Scanning...":"Refresh"),"Library"),React.createElement("div",{className:"btn-group","data-toggle":"buttons"},React.createElement("label",{className:"btn btn-default"},React.createElement("input",{type:"radio",autoComplete:"off",onClick:this.onTabSelect.bind(this,"artists")})," Artists"),React.createElement("label",{className:"btn btn-default"},React.createElement("input",{type:"radio",autoComplete:"off",onClick:this.onTabSelect.bind(this,"albums")})," Albums"),React.createElement("label",{className:"btn btn-default"},React.createElement("input",{type:"radio",autoComplete:"off",onClick:this.onTabSelect.bind(this,"songs")})," Songs")),a)}}),Factoid=React.createClass({displayName:"Factoid",getInitialState:function(){return{ordering:["is_parsed","is_songs_named","is_songs_tracked","is_songs_artist","is_songs_album","is_albums_sized"],is_parsed:!1,is_songs_named:!1,is_songs_tracked:!1,is_songs_artist:!1,is_songs_album:!1,is_albums_sized:!1,is_albums_complete:!1,is_logged_in:!1}},componentDidMount:function(){console.info("[Factoid] componentDidMount"),this.loadFactoid()},loadFactoid:function(){console.info("[Factoid] loadFactoid"),this.state.ordering.length>0&&$.getJSON("/factoid/"+this.state.ordering[0]).done(function(a){var b={};a===!0?(b[this.state.ordering[0]]=!0,b.ordering=this.state.ordering,b.ordering.shift(),setTimeout(function(){this.loadFactoid()}.bind(this),1e3)):b[this.state.ordering[0]]=a,this.setState(b)}.bind(this)).fail(function(a,b,c,d){alert("Error loading factoid"),console.error("[Factoid] loadFactoid: error",a)}.bind(this))},submitSong:function(a){console.info("[Factoid] submitSong"),a.preventDefault();var b=React.findDOMNode(this.refs.formSong);console.info("[Factoid] submitSong form",b),this.sendFactoid(b,"/set/songs")},submitAlbum:function(a){console.info("[Factoid] submitAlbum"),a.preventDefault();var b=React.findDOMNode(this.refs.formAlbum);console.info("[Factoid] submitAlbum form",b),this.sendFactoid(b,"/set/albums")},sendFactoid:function(a,b){console.info("[Factoid] sendFactoid");var c={};c[this.state.ordering[0]]=!1,this.setState(c),$.post(b,$(a).serialize()).done(function(a){console.info("[Factoid] sendFactoid res",a)}.bind(this)).fail(function(a,b,c,d){console.error("[Factoid] loadFactoid: error",a),alert("Error sendFactoid")}.bind(this)).always(function(){console.info("[Factoid] sendFactoid: always"),this.loadFactoid()}.bind(this))},render:function(){console.info("[Factoid] render");var a=null;return"boolean"!=typeof this.state.is_parsed?a="You have "+this.state.is_parsed.count+" unparsed songs":"boolean"!=typeof this.state.is_songs_named?a=React.createElement("form",{ref:"formSong",className:"form",onSubmit:this.submitSong},React.createElement("dl",null,React.createElement("dt",null,"What is the name of this song?"),React.createElement("dd",null,React.createElement("span",null,this.state.is_songs_named.path_name)),React.createElement("dd",null,React.createElement("small",{classNames:"text-muted"},this.state.is_songs_named.web_path))),React.createElement("input",{type:"hidden",name:"song",value:this.state.is_songs_named.id}),React.createElement("input",{type:"text",name:"name",className:"form-control input-sm",required:!0,autoFocus:!0,autoComplete:"off"}),React.createElement("button",{type:"submit",className:"btn btn-default btn-sm"},"Submit")):"boolean"!=typeof this.state.is_songs_tracked?a=React.createElement("form",{ref:"formSong",className:"form",onSubmit:this.submitSong},React.createElement("dl",null,React.createElement("dt",null,"What is the track of this song?"),React.createElement("dd",null,React.createElement("span",null,this.state.is_songs_tracked.path_name)),React.createElement("dd",null,React.createElement("small",{classNames:"text-muted"},this.state.is_songs_tracked.web_path))),React.createElement("input",{type:"hidden",name:"id",value:this.state.is_songs_tracked.id}),React.createElement("input",{type:"number",name:"song_track_number",className:"form-control input-sm",required:!0,autoFocus:!0,autoComplete:"off"}),React.createElement("button",{type:"submit",className:"btn btn-default btn-sm"},"Submit")):"boolean"!=typeof this.state.is_songs_artist?a=React.createElement("form",{ref:"formSong",className:"form",onSubmit:this.submitSong},React.createElement("dl",null,React.createElement("dt",null,"Who is the artist of this song?"),React.createElement("dd",null,this.state.is_songs_artist.name),React.createElement("dd",null,React.createElement("small",{className:"text-muted"},this.state.is_songs_artist.web_path))),React.createElement("input",{type:"hidden",name:"id",value:this.state.is_songs_artist.id}),React.createElement("input",{type:"text",className:"form-control input-sm",name:"artist.name",required:!0,autoFocus:!0,autoComplete:"off"}),React.createElement("button",{type:"submit",className:"btn btn-default btn-sm"},"Submit")):"boolean"!=typeof this.state.is_songs_album?a=React.createElement("form",{ref:"formSong",className:"form",onSubmit:this.submitSong},React.createElement("dl",null,React.createElement("dt",null,"What is the album of this song?"),React.createElement("dd",null,this.state.is_songs_album.name),React.createElement("dd",null,React.createElement("small",{className:"text-muted"},this.state.is_songs_album.web_path))),React.createElement("input",{type:"hidden",name:"id",value:this.state.is_songs_album.id}),React.createElement("input",{type:"text",className:"form-control input-sm",name:"album.name",required:!0,autoFocus:!0,autoComplete:"off"}),React.createElement("button",{type:"submit",className:"btn btn-default btn-sm"},"Submit")):"boolean"!=typeof this.state.is_albums_sized?a=React.createElement("form",{ref:"formAlbum",className:"form",onSubmit:this.submitAlbum},React.createElement("dl",null,React.createElement("dt",null,"How many tracks does this album have?"),React.createElement("dd",null,React.createElement("span",null,this.state.is_albums_sized.name)),React.createElement("dd",null,"~ ",this.state.is_albums_sized.artist.name)),React.createElement("input",{type:"hidden",name:"id",value:this.state.is_albums_sized.id}),React.createElement("input",{type:"number",name:"total_tracks",className:"form-control input-sm",required:!0,autoFocus:!0,autoComplete:"off"}),React.createElement("button",{type:"submit",className:"btn btn-default btn-sm"},"Submit")):"boolean"!=typeof this.state.is_albums_complete?a=React.createElement("form",{ref:"formAlbumsSize",className:"form",onSubmit:this.submitAlbumsSized},React.createElement("input",{type:"hidden",name:"album_id",value:this.state.is_albums_complete.album.id}),React.createElement("h4",null,"This album has missing tracks!"),React.createElement("dl",null,React.createElement("dt",null,"Tracks set on the album currently is ",React.createElement("strong",null,this.state.is_albums_complete.album.total_tracks)),React.createElement("dd",null,React.createElement("span",null,this.state.is_albums_complete.album.name)),React.createElement("dd",null,"~ ",this.state.is_albums_complete.album.artist.name)),React.createElement("input",{type:"number",className:"form-control input-sm",id:"album_size",name:"total_tracks",required:!0,autoFocus:!0}),React.createElement("button",{type:"submit",className:"btn btn-default btn-sm"},"Submit"),React.createElement("hr",null),React.createElement("dl",null,React.createElement("dt",null,this.state.is_albums_complete.songs.length," songs that belong to the album:"),this.state.is_albums_complete.songs.map(function(a){return React.createElement("dd",null,a.track_number," ",a.name)}))):"boolean"!=typeof this.state.is_logged_in&&(a="You are not logged into Last.fm"),a?React.createElement("div",{className:"alert alert-default"},a):React.createElement("span",null)}});React.render(React.createElement("section",null,React.createElement(Factoid,null),React.createElement(Library,null)),document.getElementById("lib-side"));var Player=React.createClass({displayName:"Player",audio_tag:null,getInitialState:function(){return console.info("[Player] getInitialState..."),{queue:[],histories:[],selections:[],current:""}},componentDidMount:function(){console.info("[Player] componentDidMount..."),this.audio_tag=React.findDOMNode(this.refs.audio_tag),this.audio_tag.addEventListener("ended",this.onEnded),console.info("[Player] audio_tag event listener added for ended"),this.audio_tag.volume=.75,console.info("[Player] audio_tag volume set to 75%"),this.loadQueue()},notifyPing:function(){if(console.info("Notifying ping..."),this.state.selections.length<1)return!1;if(this.state.queue.length>=4)return!1;var a=new Audio("/static/sounds/ping.mp3");a.play()},loadQueue:function(){return console.info("[Player] loadQueue..."),$.get("/load/queue").success(function(a,b,c,d){console.info("[Player] loadQueue: ",a.length,a[0]),this.setState({queue:a}),this.playNext(),this.getSelections(),this.loadHistories()}.bind(this)).error(function(a,b,c,d){alert("Error retrieving files"),console.error("[Player] loadQueue: error",a)}.bind(this))},loadHistories:function(){return console.info("[Player] loadHistories..."),$.get("/load/histories").success(function(a,b,c,d){console.info("[Player] loadHistories: ",a.length,a[0]),this.setState({histories:a})}.bind(this)).error(function(a,b,c,d){alert("Error retrieving files"),console.error("[Player] loadHistories: error",a)}.bind(this))},getSelections:function(){return console.info("[Player] getSelection..."),this.state.selections.length>0?void console.info("[Player] getSelection: Already have selections"):this.state.queue.length>4?void console.info("[Player] getSelection: Already have enough songs in queue"):void $.get("/selection").success(function(a,b,c,d){console.info("[Player] getSelection: success",a.length,a[0]),this.setState({selections:a})}.bind(this)).error(function(a,b,c,d){alert("Error retrieving selection files"),console.error("[Player] getSelection: error",a)}.bind(this))},setSelection:function(a){console.info("[Player] setSelection...");var b=this.state.selections,c=b.shift();this.setState({selections:b}),console.info("[Player] setSelection: removed from selections",this.state.selections.length);var d=[];c.forEach(function(a){d.push(a.id)}),$.post("/add/queue",{winner:a.id,losers:d}).success(function(a,b,c,d){this.loadQueue()}.bind(this)).error(function(a,b,c,d){alert("Error updating selection"),console.error("[Player] setSelection: error",a)}.bind(this))},playNext:function(){if(console.info("[Player] playNext..."),this.state.queue.length<1)return void console.warn("[Player] playNext: queue empty");if(""!=this.state.current)return void console.warn("[Player] playNext: already playing");var a=this.state.queue[0];console.info("[Player] playNext:",a),this.setState({current:a.src}),this.audio_tag.play(),document.title=a.song.name+" ~"+a.song.artist.name,this.notifyPing()},onEnded:function(){console.info("[Player] onEnded..."),this.setState({current:""}),document.title="speler",$.post("/ended",{id:this.state.queue[0].id}).success(function(a,b,c,d){this.loadQueue()}.bind(this)).error(function(a,b,c,d){alert("Error updating selection"),console.error("[Player] setSelection: error",a)}.bind(this))},render:function(){return console.info("[Player] render..."),React.createElement("div",{className:"row"},React.createElement("div",{className:"col-sm-11"},React.createElement("div",null,React.createElement("audio",{ref:"audio_tag",src:this.state.current,controls:!0}),this.state.queue.length?React.createElement("a",{onClick:this.onEnded,href:"#",className:"audio_next"},"⪼"):""),this.state.selections.length?React.createElement("div",null,React.createElement("h5",null,"Choose next song to add to playlist:"),React.createElement("div",{className:"btn-group btn-group-vertical"},this.state.selections[0].map(function(a){return React.createElement("a",{key:a.id,onClick:this.setSelection.bind(this,a),className:"btn btn-default",type:"button"},React.createElement("small",null,React.createElement(SongDetails,{song:a})))}.bind(this)))):"",React.createElement("div",null,React.createElement("h5",null,"Playlist:"),React.createElement("ol",null,this.state.queue.map(function(a,b){return React.createElement("li",{key:a.id,className:1>b?"current_song":""},React.createElement(SongDetails,{song:a.song}))}))),React.createElement("div",null,React.createElement("h5",null,"Recently Played:"),this.state.histories.length?React.createElement("ol",null,this.state.histories.map(function(a){return React.createElement("li",{key:a.id},React.createElement(SongDetails,{song:a.song}))})):React.createElement("p",null,"no songs played recently"))))}}),SongDetails=React.createClass({displayName:"SongDetails",render:function(){return React.createElement("span",null,React.createElement("strong",null,React.createElement("small",{className:"text-muted"},this.props.song.track_number," "),React.createElement("span",{title:this.props.song.id}," ",this.props.song.name)),React.createElement("br",null),React.createElement("small",null,React.createElement("span",null,this.props.song.artist?this.props.song.artist.name:"no artist"),React.createElement("br",null),React.createElement("em",null,React.createElement("small",{className:"text-muted"},this.props.song.album?this.props.song.album.year:"")," ",this.props.song.album?this.props.song.album.name:"no album")))}});React.render(React.createElement(Player,null),document.getElementById("play-side"));