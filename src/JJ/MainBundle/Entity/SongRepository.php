<?php

namespace JJ\MainBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * SongRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SongRepository extends EntityRepository
{
    /**
     * Count all
     *
     * @return int
     */
    public function countAll()
    {
        $query = $this->getEntityManager()->createQuery("
                SELECT COUNT(s)
                FROM MainBundle:Song s
            ");
        return (int) $query->getSingleScalarResult();
    }

    /**
     * Find random
     *
     * @param $countSongs
     * @return Song
     */
    public function findRandom($countSongs)
    {
        $pointer = rand(0, $countSongs - 1);
        $query = $this->getEntityManager()->createQuery("
                SELECT s
                FROM MainBundle:Song s
            ")
            ->setMaxResults(1)
            ->setFirstResult($pointer);
        return $query->getSingleResult();
    }

    /**
     * Find last played at song
     *
     * @return \DateTime
     */
    public function findLastPlayedAt()
    {
        $query = $this->getEntityManager()->createQuery("
                SELECT MAX(s.playedAt)
                FROM MainBundle:Song s
            ");
        $result = $query->getSingleScalarResult();
        return new \DateTime($result);
    }

    /**
     * Max count played
     *
     * @return int
     */
    public function maxCountPlayed()
    {
        $query = $this->getEntityManager()->createQuery("
              SELECT MAX(s.countPlayed)
              FROM MainBundle:Song s
            ");
        return $query->getSingleScalarResult();
    }

    /**
     * Max count rated
     *
     * @return int
     */
    public function maxCountRated()
    {
        $query = $this->getEntityManager()->createQuery("
              SELECT MAX(s.rated)
              FROM MainBundle:Song s
            ");
        return $query->getSingleScalarResult();
    }
}
